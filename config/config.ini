[Repository]
; 1.25
; url = https://github.com/georgwittberger/apache-spring-boot-microservice-example
; revoir : rabbitmq non relié ...
; 4.21
; url = https://github.com/callistaenterprise/blog-microservices
; 1.59
; url = https://github.com/blaugmail/clone-sample-spring-oauth2-microservices
; 2.69
; url = https://github.com/apssouza22/java-microservice
; 1.95
; url = https://github.com/ewolff/microservice

; 88s
; url = https://github.com/ewolff/microservice-kafka
; 7.5s
; url = https://github.com/anilallewar/microservices-basics-spring-boot
; 40.25s
; url = https://github.com/mudigal-technologies/microservices-sample
; 19.19s
; no DFD image ...
; url = https://github.com/sqshq/piggymetrics
; revoir
; 7.18s
; url = https://github.com/rohitghatol/spring-boot-microservices
; 1.25s
; url = https://github.com/koushikkothagal/spring-boot-microservices-workshop
; 2.9s
; url = https://github.com/mdeket/spring-cloud-movie-recommendation
; 2.35s
; url = https://github.com/yidongnan/spring-cloud-netflix-example
; 92s
; url = https://github.com/fernandoabcampos/spring-netflix-oss-microservices
; pb with dockercompose file
; très long -> 288.3s
; url = https://github.com/spring-petclinic/spring-petclinic-microservices
; service name replace "" par "-" 
; 1.65s
; url = https://github.com/shabbirdwd53/springboot-microservice
; 1.64s
; url = https://github.com/jferrater/tap-and-eat-microservices






; ############################################################################################################################################################
; Others :

; url = https://github.com/saturnism/istio-by-example-java.git
; kko

; JOYRPC est un framework de services RPC implémenté en Java. Il a été entièrement repensé sur la base de l'expérience acquise avec les frameworks de services internes et prend en charge l'asynchronisme complet, les micro-noyaux et les plug-ins.
; framework -> pas de lien / shema archi
; url = https://github.com/jd-opensource/joyrpc.git


; Microservices with Kafka and Saga pattern using Spring boot
; schéma architecture
; url  = https://github.com/sylleryum/kafka-microservices-with-saga.git

; Youtube Java SpringCloud Mikroservis Egitimi Serisi Projesi
; architecture
; TODO:
; url = https://github.com/HaydiKodlayalim/microservice-app.git

; Role Based Access Control - User Management Microservice
; url = https://github.com/andreagiassi/microservice-rbac-user-management.git
; 1 service et une bdd ?

; Microservice Architecture with Multiple Languages
; url = https://github.com/rodrigorodrigues/microservices-design-patterns.git
; OKK

; A microservices demo implemented with Spring Cloud Netflix and Vaadin.
; url = https://github.com/alejandro-du/vaadin-microservices-demo.git
; OK

; Develop a well-architected and well-documented REST API, built on a tightly integrated collection of Java EE-based microservices.
; archi disponible 
; url = https://github.com/garystafford/virtual-vehicles-demo.git
; pas de lien ? intéressant à voir

; OpenShift S2I Builder for Java
; url = https://github.com/jorgemoralespou/s2i-java.git
; 1services?

; Ecommerce Microservices Architecture : A complete ecommerce demo Implement based on Microservice Architecture Pattern using Spring Boot, Spring Cloud, Spring WebFlux, Postgresdb and Docker.
; url = https://github.com/mostafacs/ecommerce-microservices-spring-reactive-webflux.git
; authentication_service/server

; QBit - The Microservice Lib for Java - JSON, REST, WebSocket, Speed!
; url = https://github.com/advantageous/qbit.git
; KO

;Deploy MicroProfile based Java microservices on Kubernetes.
; archi disponible
;   File "/Users/Joseph/Desktop/Etude/CYBERSECURITÉ/A4/Stage-IRISA/code2DFD/core/dfd_extraction.py", line 90, in DFD_extraction
;     assert microservices != microservices1, "Egalité - 1"
;            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
; AssertionError: Egalité - 1
; url = https://github.com/IBM/Java-MicroProfile-on-Kubernetes.git
; KO

; istio
; url = https://github.com/saturnism/istio-by-example-java.git
; voir les liens entre services

; Monitor logs, metrics, pings, and traces of your distributed (micro-) services. There are also slides walking you through the features of this repository.
; url = https://github.com/xeraa/microservice-monitoring.git
; voir les liens

; TeaStore : Selena -> thèse
; url = https://github.com/DescartesResearch/TeaStore.git

; ok
; url = https://github.com/WendellAdriel/spring-microservices
; koo
; url = https://github.com/andreschaffer/microservices-testing-examples.git
; ko
; url = https://github.com/kumuluz/kumuluzee.git
; ?ok
; url = https://github.com/redhat-helloworld-msa/hola.git
; ko
; url = https://github.com/CJSCommonPlatform/microservice_framework_version_6.git
; ?ok
; url = https://github.com/artembilan/microservices-patterns-spring-integration.git
; ok ?
url = https://github.com/eazybytes/event-driven-microservices.git
; ok ?
; url = https://github.com/TristanPerry/java8-spring-cloud-microservice-demo.git
; koo bof
; url = https://github.com/fuinorg/ddd-cqrs-4-java-example.git



[Technology Profiles]
communication_techs_list = [("RabbitMQ", "rmq"), ("Kafka", "kfk"), ("RestTemplate", "rst"), ("FeignClient", "fgn"), ("Implicit Connections", "imp"), ("Database Connections", "dbc"), ("HTML", "html"), ("Docker-Compose", "dcm")]

[Analysis Settings]
development_mode = False
; commit for apssouza22/java-microservice
;commit = 056414c4c938e536f467a3f37532194b860d96a3

[DFD]
